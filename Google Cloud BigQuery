SELECT
  *
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NOT NULL
ORDER BY
  location,
  date;

-- Select Data that we are going to be using

SELECT 
  location,
  date,
  total_cases,
  new_cases,
  total_deaths,
  population
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NOT NULL  
ORDER BY 
  location,
  date;

-- Looking at Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract in your country

SELECT 
  location,
  date,
  total_cases,
  total_deaths,
  (total_deaths/total_cases)*100 AS DeathPercentage
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
-- WHERE
--   location LIKE '%States%'
WHERE
  continent IS NOT NULL
ORDER BY 
  location,
  date;

-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid

SELECT 
  location,
  date,
  total_cases,
  population,
  (total_cases/population)*100 AS CasePercentage
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NOT NULL
ORDER BY 
  location,
  date;

-- Looking at Countries with Highest Infection Rate compared to Population

SELECT 
  location,
  population,
  MAX(total_cases) AS HighestInfectionCount,
  MAX((total_cases/population)*100) AS PercentPopulationInfected
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NOT NULL
GROUP BY
  location,
  population
ORDER BY 
  PercentPopulationInfected DESC;

-- Showing Countries with Highest Death Count per Population

SELECT 
  location,
  MAX(total_deaths) AS TotalDeathCount,
  MAX((total_deaths/population)*100) AS PercentPopulationDeath
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NOT NULL
GROUP BY
  location
ORDER BY 
  PercentPopulationDeath DESC;

-- LET'S BREAK THINGS DOWN BY CONTINENT

SELECT 
  location,
  MAX(total_deaths) AS TotalDeathCount,
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
WHERE
  continent IS NULL
GROUP BY
  location
ORDER BY 
  TotalDeathCount DESC;

  -- GLOBAL NUMBERS

SELECT 
  date,
  SUM(new_cases) AS total_cases,
  SUM(new_deaths) AS total_deaths,
  SUM(new_deaths)/SUM(new_cases)*100 AS DeathPercentage
FROM 
  `portfolio-project-348822.Portfolio_Project.Covid_Deaths`
-- WHERE
--   location LIKE '%States%'
WHERE
  continent IS NOT NULL
GROUP BY
  date;

-- Looking at Total Population vs Vaccinations

SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations
FROM `portfolio-project-348822.Portfolio_Project.Covid_Deaths` AS dea
JOIN `portfolio-project-348822.Portfolio_Project.Covid_Vaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE 
  dea.continent IS NOT NULL
ORDER BY
  2,3;

-- Looking at Total Population vs Vaccinations (Rolling People Vaccinated)

SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `portfolio-project-348822.Portfolio_Project.Covid_Deaths` AS dea
JOIN `portfolio-project-348822.Portfolio_Project.Covid_Vaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE 
  dea.continent IS NOT NULL
ORDER BY
  2,3;

-- USE CTE

WITH Pop_Vac AS (

  SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM `portfolio-project-348822.Portfolio_Project.Covid_Deaths` AS dea
  JOIN `portfolio-project-348822.Portfolio_Project.Covid_Vaccinations` AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
  WHERE 
    dea.continent IS NOT NULL
  ORDER BY
    2,3
)

SELECT
  *,
  (RollingPeopleVaccinated/population)*100 AS PercentageRollingVaccinated
FROM Pop_Vac;

-- TEMP TABLE

CREATE TEMP TABLE PercentPopulationVaccinated AS
  SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM `portfolio-project-348822.Portfolio_Project.Covid_Deaths` AS dea
  JOIN `portfolio-project-348822.Portfolio_Project.Covid_Vaccinations` AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
  WHERE 
    dea.continent IS NOT NULL
  ORDER BY
    2,3; 

-- Create View to store data for later visualizations

CREATE VIEW `portfolio-project-348822.Portfolio_Project.PercentPopulationVaccinated` AS (
  SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM `portfolio-project-348822.Portfolio_Project.Covid_Deaths` AS dea
  JOIN `portfolio-project-348822.Portfolio_Project.Covid_Vaccinations` AS vac
    ON dea.location = vac.location
    AND dea.date = vac.date
  WHERE 
    dea.continent IS NOT NULL
  ORDER BY
    2,3);
